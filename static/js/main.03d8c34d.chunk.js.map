{"version":3,"sources":["reducer.js","action-creator.js","component/Add-block.jsx","component/Sirch-panel.jsx","component/List-item.jsx","component/List.jsx","component/App.jsx","index.js"],"names":["startMassive","label","important","id","add","prop","type","payload","del","changeImportant","setFilters","AddBlock","connect","dispatch","dispatchNewCase","bindActionCreators","useState","inputValue","useinputValue","className","onChange","event","target","value","placeholder","onClick","newCase","Date","now","SirchInput","state","filterList","dispatchFilter","importantFilter","inputFilter","ListItem","dispathChange","dispatchDel","element","currentImportant","setCurrentImportant","console","log","List","caseMassive","newMassive","filter","includes","finishList","map","store","createStore","currenCaseId","findIndex","undefined","index","App","StrictMode","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.03d8c34d.chunk.js","sourcesContent":["let startMassive = [\r\n  {\r\n    label: \"first\",\r\n    important: true,\r\n    id: 1,\r\n  },\r\n  {\r\n    label: \"second\",\r\n    important: false,\r\n    id: 2,\r\n  },\r\n  {\r\n    label: \"third\",\r\n    important: true,\r\n    id: 3,\r\n  },\r\n];\r\n\r\nexport const reducer = function (\r\n  state = {\r\n    caseMassive: startMassive,\r\n    filterList: { inputFilter: false, inputValue: \"\", importantFilter: false },\r\n  },\r\n  { type, payload }\r\n) {\r\n  let { caseMassive, filterList } = state;\r\n\r\n  let currenCaseId =\r\n    type === \"delete\" || type === \"change\"\r\n      ? caseMassive.findIndex((element) => element.id === payload)\r\n      : undefined;\r\n  switch (type) {\r\n    case \"add\":\r\n      return {\r\n        caseMassive: [...caseMassive, payload],\r\n        filterList: { ...filterList },\r\n      };\r\n\r\n    case \"setFilters\":\r\n      return { ...state, filterList: payload };\r\n\r\n    case \"delete\":\r\n      return {\r\n        caseMassive: caseMassive.filter((element, index) => {\r\n          if (index !== currenCaseId) {\r\n            return element;\r\n          }\r\n          return { caseMassive, filterList };\r\n        }),\r\n\r\n        filterList: { ...filterList },\r\n      };\r\n\r\n    case \"change\":\r\n      return {\r\n        caseMassive: caseMassive.map((element, index) => {\r\n          if (index === currenCaseId) {\r\n            element.important = !element.important;\r\n          }\r\n          return element;\r\n        }),\r\n        filterList,\r\n      };\r\n\r\n    default:\r\n      return { caseMassive, filterList };\r\n  }\r\n};\r\n","import { bindActionCreators } from \"redux\";\r\n\r\nconst add = (prop) => {\r\n  return {\r\n    type: \"add\",\r\n    payload: prop,\r\n  };\r\n};\r\n\r\nconst del = (prop) => {\r\n  return {\r\n    type: \"delete\",\r\n    payload: prop,\r\n  };\r\n};\r\n\r\nconst changeImportant = (prop) => {\r\n  return {\r\n    type: \"change\",\r\n    payload: prop,\r\n  };\r\n};\r\n\r\nexport const setFilters = (prop) => {\r\n  return {\r\n    type: \"setFilters\",\r\n    payload: prop,\r\n  };\r\n};\r\n\r\nexport const mapDispatchToPropsAdd = (dispatch) => {\r\n  const dispatchNewCase = bindActionCreators(add, dispatch);\r\n  return {\r\n    dispatchNewCase: (payload) => dispatchNewCase(payload),\r\n  };\r\n};\r\n\r\nexport const mapDispatchToPropsDelChange = (dispatch) => {\r\n  const dispathChange = bindActionCreators(changeImportant, dispatch);\r\n  const dispatchDel = bindActionCreators(del, dispatch);\r\n  return {\r\n    dispatchDel: (payload) => dispatchDel(payload),\r\n    dispathChange: (payload) => dispathChange(payload),\r\n  };\r\n};\r\n\r\nexport const mapDispatchToPropsFilter = (dispatch) => {\r\n  const dispatchFilter = bindActionCreators(setFilters, dispatch);\r\n  return {\r\n    dispatchFilter: (payload) => dispatchFilter(payload),\r\n  };\r\n};\r\n","import { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { mapDispatchToPropsAdd as mapDispatchToProps } from \"../action-creator\";\r\n\r\n\r\nfunction CreateAddBlock({ dispatchNewCase }) {\r\n  let [inputValue, useinputValue] = useState(\"\");\r\n\r\n  function formChange(event) {\r\n    useinputValue(event.target.value);\r\n  }\r\n\r\n  // created new case and send it to reduser\r\n  function addCase() {\r\n    let newCase = {\r\n      label: inputValue,\r\n      important: false,\r\n      id: Date.now(),\r\n    };\r\n\r\n    dispatchNewCase(newCase);\r\n\r\n    useinputValue(\"\");\r\n  }\r\n  return (\r\n    <div className=\"input-block\">\r\n      <input\r\n        type=\"text\"\r\n        onChange={formChange}\r\n        value={inputValue}\r\n        placeholder=\"input new case\"\r\n      />\r\n      <button className=\"addCase\" onClick={addCase} value={inputValue}>\r\n        ADD\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport let AddBlock = connect(null, mapDispatchToProps)(CreateAddBlock);\r\n","import { mapDispatchToPropsFilter as mapDispatchToProps } from \"../action-creator\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction CreateSirchInput({ dispatchFilter, filterList }) {\r\n  function showImportant() {\r\n    dispatchFilter({ ...filterList, importantFilter: true });\r\n  }\r\n  function showAll() {\r\n    dispatchFilter({ ...filterList, importantFilter: false });\r\n  }\r\n\r\n  function serchChange(event) {\r\n    if (event.target.value !== \"\") {\r\n      dispatchFilter({\r\n        ...filterList,\r\n        inputFilter: true,\r\n        inputValue: event.target.value,\r\n      });\r\n    } else {\r\n      dispatchFilter({\r\n        ...filterList,\r\n        inputFilter: false,\r\n        inputValue: \"\",\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"find-block\">\r\n        <button\r\n          className={filterList.importantFilter ? \"\" : \"red-shadow\"}\r\n          onClick={showAll}\r\n        >\r\n          All case\r\n        </button>\r\n        <button\r\n          className={filterList.importantFilter ? \"red-shadow\" : \"\"}\r\n          onClick={showImportant}\r\n        >\r\n          only important\r\n        </button>\r\n        <br />\r\n        <input\r\n          type=\"text\"\r\n          onChange={serchChange}\r\n          placeholder=\"input what you are looking \"\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    filterList: state.filterList,\r\n  };\r\n}\r\nexport let SirchInput = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(CreateSirchInput);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { mapDispatchToPropsDelChange as mapDispatchToProps } from \"../action-creator\";\r\n\r\nfunction CreateListItem({ element, dispatchDel, dispathChange }) {\r\n  let { label, important, id } = element;\r\n  let [currentImportant, setCurrentImportant] = useState(important);\r\n  if (important !== currentImportant) {\r\n    setCurrentImportant(important);\r\n  }\r\n  function deleteElement() {\r\n    dispatchDel(id);\r\n  }\r\n  function changeElement() {\r\n    dispathChange(id);\r\n  }\r\n\r\n  console.log(\"mini-change\");\r\n  return (\r\n    <li className={currentImportant ? \"important list-item\" : \"list-item\"}>\r\n      <button className=\"button-important\" onClick={changeElement}>\r\n        <i className=\"fa fa-exclamation\"></i>\r\n      </button>\r\n      <span>{label}</span>\r\n      <button className=\"button-delete\" onClick={deleteElement}>\r\n        <i className=\"fa fa-trash-o\"></i>\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport let ListItem = connect(null, mapDispatchToProps)(CreateListItem);\r\n","import { ListItem } from \"./List-item\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction CreateList({ filterList, caseMassive }) {\r\n  // accept massive and filter list and show handled massive\r\n  // в caseMassive приходит массив типа[\r\n  //   { label: inputValue,important: false,id: Date.now()},\r\n  //   { label: inputValue,important: true,id: Date.now()},\r\n  //   { label: inputValue,important: false,id: Date.now()}\r\n  // ]\r\n  let newMassive = caseMassive;\r\n\r\n  if (filterList.importantFilter) {\r\n    newMassive = newMassive.filter((element) => element.important === true);\r\n  }\r\n\r\n  if (filterList.inputFilter) {\r\n    newMassive = newMassive.filter(\r\n      (element) => element.label.includes(filterList.inputValue) === true\r\n    );\r\n  }\r\n\r\n  // потом я этот масив переделываю в список лишек \"</li>\"*\r\n\r\n  let finishList = newMassive.map((element) => {\r\n    return <ListItem key={element.id} element={element} />;\r\n  });\r\n  //  И ВООТ на этом этапе и проблема. Сам CreateList замечательно обновляеться,\r\n  // но переменная finishList  не перерендываеться.\r\n  //  как сделать так чтобы переменная finishList также обновновлялась при обновлении CreateList ?,\r\n  return <ol>{finishList}</ol>;\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    filterList: state.filterList,\r\n    caseMassive: state.caseMassive,\r\n  };\r\n}\r\n\r\nexport let List = connect(mapStateToProps)(CreateList);\r\n","import React from \"react\";\r\nimport { createStore } from \"redux\";\r\nimport { reducer } from \"../reducer\";\r\nimport { Provider } from \"react-redux\";\r\nimport { AddBlock } from \"./Add-block\";\r\nimport { SirchInput } from \"./Sirch-panel\";\r\nimport { List } from \"./List\";\r\n\r\nexport const store = createStore(reducer);\r\n\r\nexport function App() {\r\n  return (\r\n    <React.StrictMode>\r\n      <Provider store={store}>\r\n        <div className=\"main-block\">\r\n          <h1>ToDo List</h1>\r\n          <SirchInput />\r\n          <List />\r\n          <AddBlock />\r\n        </div>\r\n      </Provider>\r\n    </React.StrictMode>\r\n  );\r\n}\r\n","import ReactDOM from \"react-dom\";\r\nimport { App } from \"./component/App\";\r\nimport \"./style.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}