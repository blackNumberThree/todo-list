{"version":3,"sources":["action-creator.js","reducer.js","component/Add-block.jsx","component/Sirch-panel.jsx","component/List-item.jsx","component/List.jsx","component/App.jsx","index.js","style.module.css"],"names":["store","createStore","state","caseMassive","filterList","inputFilter","inputValue","importantFilter","type","payload","currenCaseId","findIndex","element","id","undefined","filter","index","console","log","map","important","dispatch","dispathChange","bindActionCreators","prop","dispatchDel","dispatchNewCase","dispatchFilter","AddBlock","connect","useState","useinputValue","className","styles","inputBlock","onChange","event","target","value","placeholder","addCase","onClick","newCase","label","Date","now","SirchInput","findBlock","classNames","redShadow","ListItem","currentImportant","setCurrentImportant","buttonImportant","buttonDelete","List","currentMassive","includes","finishList","App","StrictMode","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.5c929364.chunk.js","sourcesContent":["import { bindActionCreators } from \"redux\";\r\nimport { createStore } from \"redux\";\r\nimport { reducer } from \"./reducer\";\r\n\r\nexport const store = createStore(reducer);\r\n\r\nlet dispatch = store.dispatch;\r\n\r\nconst add = (prop) => {\r\n  return {\r\n    type: \"add\",\r\n    payload: prop,\r\n  };\r\n};\r\n\r\nconst del = (prop) => {\r\n  return {\r\n    type: \"delete\",\r\n    payload: prop,\r\n  };\r\n};\r\n\r\nconst changeImportant = (prop) => {\r\n  return {\r\n    type: \"change\",\r\n    payload: prop,\r\n  };\r\n};\r\n\r\nexport const setFilters = (prop) => {\r\n  return {\r\n    type: \"setFilters\",\r\n    payload: prop,\r\n  };\r\n};\r\n\r\nexport const dispathChange = bindActionCreators(changeImportant, dispatch);\r\nexport const dispatchDel = bindActionCreators(del, dispatch);\r\nexport const dispatchNewCase = bindActionCreators(add, dispatch);\r\nexport const dispatchFilter = bindActionCreators(setFilters, dispatch);\r\n\r\n\r\n","// let startMassive = [\r\n//   {\r\n//     label: \"first\",\r\n//     important: true,\r\n//     id: 1,\r\n//   },\r\n// ];\r\n\r\nexport const reducer = function (\r\n  state = {\r\n    caseMassive: [],\r\n    filterList: { inputFilter: false, inputValue: \"\", importantFilter: false },\r\n  },\r\n  { type, payload }\r\n) {\r\n  let { caseMassive, filterList } = state;\r\n  let currenCaseId =\r\n    type === \"delete\" || type === \"change\"\r\n      ? caseMassive.findIndex((element) => element.id === payload)\r\n      : undefined;\r\n  switch (type) {\r\n    case \"add\":\r\n      return {\r\n        caseMassive: [...caseMassive, payload],\r\n        filterList: { ...filterList },\r\n      };\r\n    case \"setFilters\":\r\n      return { ...state, filterList: payload };\r\n    case \"delete\":\r\n      return {\r\n        caseMassive: caseMassive.filter((element, index) => {\r\n          if (index !== currenCaseId) {\r\n            console.log(index, currenCaseId);\r\n            return element;\r\n          }\r\n        }),\r\n        filterList: { ...filterList },\r\n      };\r\n\r\n    case \"change\":\r\n      return {\r\n        caseMassive: caseMassive.map((element, index) => {\r\n          if (index === currenCaseId) {\r\n            element.important = !element.important;\r\n          }\r\n          return element;\r\n        }),\r\n        filterList,\r\n      };\r\n    default:\r\n      return { caseMassive, filterList };\r\n  }\r\n};\r\n","import { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { dispatchNewCase } from \"../action-creator\";\r\nimport styles from \"../style.module.css\";\r\n\r\nfunction CreateAddBlock({ dispatchNewCase }) {\r\n  let [inputValue, useinputValue] = useState(\"\");\r\n  function formChange(event) {\r\n    useinputValue(event.target.value);\r\n  }\r\n\r\n  // created new case and send it to reduser\r\n  function addCase() {\r\n    let newCase = {\r\n      label: inputValue,\r\n      important: false,\r\n      id: Date.now(),\r\n    };\r\n\r\n    if (inputValue) {\r\n      dispatchNewCase(newCase);\r\n    }\r\n\r\n    useinputValue(\"\");\r\n  }\r\n  return (\r\n    <div className={styles.inputBlock}>\r\n      <input\r\n        type=\"text\"\r\n        onChange={formChange}\r\n        value={inputValue}\r\n        placeholder=\"input new case\"\r\n      />\r\n      <button className={styles.addCase} onClick={addCase} value={inputValue}>\r\n        ADD\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = () => {\r\n  return {\r\n    dispatchNewCase: (payload) => dispatchNewCase(payload),\r\n  };\r\n};\r\n\r\nexport let AddBlock = connect(null, mapDispatchToProps)(CreateAddBlock);\r\n","import { dispatchFilter } from \"../action-creator\";\r\nimport { connect } from \"react-redux\";\r\nimport classNames from \"classnames\";\r\nimport styles from \"../style.module.css\";\r\n\r\nfunction CreateSirchInput({ dispatchFilter, filterList }) {\r\n  function showImportant() {\r\n    dispatchFilter({ ...filterList, importantFilter: true });\r\n  }\r\n  function showAll() {\r\n    dispatchFilter({ ...filterList, importantFilter: false });\r\n  }\r\n\r\n  function serchChange(event) {\r\n    if (event.target.value !== \"\") {\r\n      dispatchFilter({\r\n        ...filterList,\r\n        inputFilter: true,\r\n        inputValue: event.target.value,\r\n      });\r\n    } else {\r\n      dispatchFilter({\r\n        ...filterList,\r\n        inputFilter: false,\r\n        inputValue: \"\",\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.findBlock}>\r\n        <button\r\n          className={classNames({\r\n            [styles.redShadow]: !filterList.importantFilter,\r\n          })}\r\n          onClick={showAll}\r\n        >\r\n          All case\r\n        </button>\r\n        <button\r\n          className={classNames({\r\n            [styles.redShadow]: filterList.importantFilter,\r\n          })}\r\n          onClick={showImportant}\r\n        >\r\n          only important\r\n        </button>\r\n        <br />\r\n        <input\r\n          type=\"text\"\r\n          onChange={serchChange}\r\n          placeholder=\"input what you are looking \"\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    filterList: state.filterList,\r\n  };\r\n}\r\nexport const mapDispatchToProps = () => {\r\n  return {\r\n    dispatchFilter: (payload) => dispatchFilter(payload),\r\n  };\r\n};\r\nexport let SirchInput = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(CreateSirchInput);\r\n","import React, { useState } from \"react\";\r\nimport { dispatchDel, dispathChange } from \"../action-creator\";\r\nimport classNames from \"classnames\";\r\nimport styles from \"../style.module.css\";\r\n\r\nexport function ListItem({ element }) {\r\n  let { label, important, id } = element;\r\n  let [currentImportant, setCurrentImportant] = useState(important);\r\n  if (important !== currentImportant) {\r\n    setCurrentImportant(important);\r\n  }\r\n  function deleteElement() {\r\n    dispatchDel(id);\r\n  }\r\n  function changeElement() {\r\n    dispathChange(id);\r\n  }\r\n  console.log(\"minichange\");\r\n  return (\r\n    <li\r\n      className={classNames(\r\n        { [styles.important]: currentImportant },\r\n        \"list-item\"\r\n      )}\r\n    >\r\n      <button className={styles.buttonImportant} onClick={changeElement}>\r\n        <i className=\"fa fa-exclamation\"></i>\r\n      </button>\r\n      <span>{label}</span>\r\n      <button className={styles.buttonDelete} onClick={deleteElement}>\r\n        <i className=\"fa fa-trash-o\"></i>\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n","import { ListItem } from \"./List-item\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction CreateList({ filterList, caseMassive }) {\r\n  // accept massive and filter list and show handled massive\r\n  let currentMassive = caseMassive;\r\n  if (filterList.importantFilter) {\r\n    currentMassive = currentMassive.filter(\r\n      (element) => element.important === true\r\n    );\r\n  }\r\n\r\n  if (filterList.inputFilter) {\r\n    currentMassive = currentMassive.filter(\r\n      (element) => element.label.includes(filterList.inputValue) === true\r\n    );\r\n  }\r\n\r\n  let finishList = currentMassive.map((element) => {\r\n    return <ListItem key={element.id} element={element} />;\r\n  });\r\n\r\n  return <ol>{finishList}</ol>;\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    filterList: state.filterList,\r\n    caseMassive: state.caseMassive,\r\n  };\r\n}\r\n\r\nexport let List = connect(mapStateToProps)(CreateList);\r\n","import React from \"react\";\r\nimport { store } from \"../action-creator\";\r\nimport { Provider } from \"react-redux\";\r\nimport { AddBlock } from \"./Add-block\";\r\nimport { SirchInput } from \"./Sirch-panel\";\r\nimport { List } from \"./List\";\r\n\r\nexport function App() {\r\n  return (\r\n    <React.StrictMode>\r\n      <Provider store={store}>\r\n        <div className=\"main-block\">\r\n          <h1>ToDo List</h1>\r\n          <SirchInput />\r\n          <List />\r\n          <AddBlock />\r\n        </div>\r\n      </Provider>\r\n    </React.StrictMode>\r\n  );\r\n}\r\n","import ReactDOM from \"react-dom\";\r\nimport { App } from \"./component/App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainBlock\":\"style_mainBlock__1h0_W\",\"findBlock\":\"style_findBlock__1RKm2\",\"inputBlock\":\"style_inputBlock__3lZuV\",\"redShadow\":\"style_redShadow__1wt1k\",\"todoList\":\"style_todoList__1_MGc\",\"listItem\":\"style_listItem__39RMm\",\"important\":\"style_important__10wYG\",\"buttonDelete\":\"style_buttonDelete__14UOj\",\"buttonImportant\":\"style_buttonImportant__3I8hE\",\"addCase\":\"style_addCase__12wOA\"};"],"sourceRoot":""}